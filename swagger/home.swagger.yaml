paths:
  /home/board:
    post:
      tags:
        - Home
      summary: 게시글 작성
      description: 사용자가 게시글을 작성합니다.
      produces:
        - application/json
      security:
        - Authorization: []
      parameters:
        - in: formData
          name: content
          type: string
          required: true
          description: 게시글의 내용입니다.
        - in: formData
          name: image
          type: file
          required: false
          description: 게시글에 첨부할 이미지입니다.
      responses:
        200:
          description: 게시글이 성공적으로 작성되었습니다.
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: true
              code:
                type: integer
                example: 2000
              message:
                type: string
                example: "success!"
        400:
          description: |
            잘못된 요청입니다. 입력값을 확인해주세요. 다음과 같은 오류가 발생할 수 있습니다:
            - HOME4001: "사진이 첨부되지 않았습니다. 사진을 첨부해 주세요."
            - HOME4002: "게시글 내용이 없습니다. 내용을 입력해 주세요."
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: false
              code:
                type: string
                example: "HOME4001"
              message:
                type: string
                example: "사진이 첨부되지 않았습니다. 사진을 첨부해 주세요."
        500:
          description: 서버 에러가 발생했습니다.

  /home/posts:
    get:
      tags:
        - Home
      summary: 가족 게시글 전체 조회
      description: 같은 가족 구성원들의 게시글을 최신 순으로 조회합니다. 각 게시글에는 작성자의 닉네임과 프로필 사진 정보, 게시글 작성 날짜, 그리고 게시글에 첨부된 모든 사진 URL이 포함됩니다.
      produces:
        - application/json
      security:
        - Authorization: []
      responses:
        200:
          description: 게시글 조회에 성공했습니다.
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: true
              code:
                type: integer
                example: 2000
              message:
                type: string
                example: "success!"
              result:
                type: array
                items:
                  type: object
                  properties:
                    post_idx:
                      type: integer
                      example: 56
                      description: 게시글 고유 번호
                    user_idx:
                      type: string
                      example: "3304133093"
                      description: 글 작성자의 고유 식별자
                    nickname:
                      type: string
                      example: "김정훈"
                      description: 글 작성자의 닉네임
                    content:
                      type: string
                      example: "새로운 게시글"
                      description: 게시글 내용
                    picture:
                      type: array
                      items:
                        type: string
                      example:
                        - "https://garden-photo-s3.s3.ap-northeast-2.amazonaws.com/board/4217b4febe753a5dbc877a837b51bfd0_%EB%8B%A4%EC%9D%B4%EB%85%B8%ED%83%B1.png"
                        - "https://garden-photo-s3.s3.ap-northeast-2.amazonaws.com/board/4d646ecf6393a7e7b0ba81363a499a88_%EB%8B%A4%EC%9D%B4%EB%85%B8%ED%83%B12.jpg"
                      description: 게시글에 첨부된 모든 사진 URL 목록
                    create_at:
                      type: string
                      example: "2024-02-09T06:18:30.000Z"
                      description: 게시글 작성 날짜
                    userImage:
                      type: string
                      example: "http://k.kakaocdn.net/dn/xxGa9/btsB5AD9Zx0/GezVLYpUOwIdOpSlU7dYo1/img_640x640.jpg"
                      description: 글 작성자의 프로필 사진 URL
        400:
          description: 잘못된 요청입니다. 입력값을 확인해주세요.
        401:
          description: 인증 실패. 유효한 토큰을 제공해야 합니다.
        500:
          description: 서버 에러가 발생했습니다.

  /home/family/members:
    get:
      tags:
        - Home
      summary: 가족 구성원 조회
      description: >
        로그인한 사용자와 같은 가족 코드를 가진 가족 구성원의 정보를 조회합니다. 
        응답에는 로그인한 사용자('me'), 가족 코드('family_code'), 가족 구성원 목록('family'), 
        그리고 가족에 들어오고 싶어 하는 대기 중인 유저 목록('waitlist')을 출력합니다.
        - application/json
      security:
        - Authorization: []
      responses:
        "200":
          description: 가족 구성원 조회 성공
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: true
              code:
                type: integer
                example: 2000
              message:
                type: string
                example: "success!"
              result:
                type: object
                properties:
                  me:
                    type: object
                    properties:
                      snsId:
                        type: string
                        example: "3304133093"
                        description: 로그인한 사용자의 고유 식별자
                      nickname:
                        type: string
                        example: "김정훈"
                        description: 로그인한 사용자의 닉네임
                      image:
                        type: string
                        example: "http://k.kakaocdn.net/dn/xxGa9/btsB5AD9Zx0/GezVLYpUOwIdOpSlU7dYo1/img_640x640.jpg"
                        description: 로그인한 사용자의 프로필 이미지 URL
                  family_code:
                    type: string
                    example: "4ae180"
                    description: 가족 구성원이 공유하는 고유 가족 코드
                  family:
                    type: array
                    items:
                      type: object
                      properties:
                        snsId:
                          type: string
                          example: "3293655686"
                          description: 가족 구성원의 고유 식별자
                        nickname:
                          type: string
                          example: "한승민"
                          description: 가족 구성원의 닉네임
                        image:
                          type: string
                          example: "http://k.kakaocdn.net/dn/nOrKL/btsDfoWMBNG/SZxW9Rf9BL5gq0vUGZiI80/img_640x640.jpg"
                          description: 가족 구성원의 프로필 이미지 URL
                  waitlist:
                    type: array
                    items:
                      type: object
                      properties:
                        snsId:
                          type: string
                          example: "3303580750"
                          description: 대기 중인 유저의 고유 식별자
                        nickname:
                          type: string
                          example: "임세현"
                          description: 대기 중인 유저의 닉네임
                        image:
                          type: string
                          example: "http://k.kakaocdn.net/dn/1G9kp/btsAot8liOn/8CWudi3uy07rvFNUkk3ER0/img_640x640.jpg"
                          description: 대기 중인 유저의 프로필 이미지 URL
        "401":
          description: 인증 실패
        "500":
          description: 서버 에러

  /home/posts/{postIdx}:
    get:
      tags:
        - Home
      summary: 특정 게시글 조회
      description: 특정 게시글의 작성자 이름, 프로필 사진, 사진, 게시글 내용, 작성 시간을 반환합니다.
      produces:
        - application/json
      security:
        - Authorization: []
      parameters:
        - in: path
          name: postIdx
          required: true
          type: integer
          description: 조회할 게시글의 고유 번호
      responses:
        200:
          description: 게시글 조회에 성공했습니다.
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: true
              code:
                type: integer
                example: 2000
              message:
                type: string
                example: "success!"
              result:
                type: object
                properties:
                  post_idx:
                    type: integer
                    example: 26
                    description: 게시글의 고유 번호
                  content:
                    type: string
                    example: "안녕하세요 저는 김정훈이고 특수문자 테스트 입니다😊"
                    description: 게시글 내용
                  picture:
                    type: array
                    items:
                      type: string
                    example:
                      - "https://garden-photo-s3.s3.ap-northeast-2.amazonaws.com/board/4217b4febe753a5dbc877a837b51bfd0_%EB%8B%A4%EC%9D%B4%EB%85%B8%ED%83%B1.png"
                      - "https://garden-photo-s3.s3.ap-northeast-2.amazonaws.com/board/4d646ecf6393a7e7b0ba81363a499a88_%EB%8B%A4%EC%9D%B4%EB%85%B8%ED%83%B12.jpg"
                    description: 게시글에 첨부된 사진 URL 목록
                  create_at:
                    type: string
                    example: "2024-01-30T22:16:59.000Z"
                    description: 게시글 작성 시간
                  nickname:
                    type: string
                    example: "김정훈"
                    description: 게시글 작성자의 닉네임
                  userImage:
                    type: string
                    example: "http://k.kakaocdn.net/dn/xxGa9/btsB5AD9Zx0/GezVLYpUOwIdOpSlU7dYo1/img_640x640.jpg"
                    description: 게시글 작성자의 프로필 사진 URL
        400:
          description: 잘못된 요청입니다. 입력값을 확인해주세요.
        404:
          description: 게시글을 찾을 수 없습니다.
        500:
          description: 서버 에러가 발생했습니다.

    patch:
      tags:
        - Home
      summary: 게시글 수정
      description: 사용자가 게시글 내용을 수정합니다. 게시글의 이미지는 수정할 수 없습니다.
      produces:
        - application/json
      security:
        - Authorization: []
      parameters:
        - in: path
          name: postIdx
          required: true
          type: integer
          description: 수정할 게시글의 고유 번호
        - in: body
          name: body
          description: 수정할 게시글 내용
          required: true
          schema:
            type: object
            properties:
              content:
                type: string
                example: 수정한 게시글입니다.
      responses:
        200:
          description: 게시글 수정 성공
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: true
              code:
                type: integer
                example: 2000
              message:
                type: string
                example: "게시글이 수정되었습니다."
        400:
          description: 잘못된 요청입니다. 입력값을 확인해주세요.
        401:
          description: 인증 실패. 유효한 토큰을 제공해야 합니다.
        403:
          description: 수정 권한 없음. 게시글의 소유자만 수정할 수 있습니다.
        404:
          description: 게시글을 찾을 수 없습니다.
        500:
          description: 서버 에러가 발생했습니다.

    delete:
      tags:
        - Home
      summary: 게시글 삭제
      description: 사용자가 게시글을 삭제합니다. 게시글의 소유자만 삭제할 수 있습니다.
      produces:
        - application/json
      security:
        - Authorization: []
      parameters:
        - in: path
          name: postIdx
          required: true
          type: integer
          description: 삭제할 게시글의 고유 번호
      responses:
        200:
          description: 게시글 삭제 성공
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: true
              code:
                type: integer
                example: 2000
              message:
                type: string
                example: "게시글이 삭제되었습니다."
        401:
          description: 인증 실패. 유효한 토큰을 제공해야 합니다.
        403:
          description: 삭제 권한 없음. 게시글의 소유자만 삭제할 수 있습니다.
        404:
          description: 게시글을 찾을 수 없습니다.
        500:
          description: 서버 에러가 발생했습니다.

  /home/user/{userId}/profile:
    get:
      tags:
        - Home
      summary: 사용자 프로필 조회
      description: >
        해당 사용자의 이름, 프로필 사진, 작성한 총 게시글 개수, 작성한 모든 게시글의 첫 번째 이미지, 게시글 번호를 조회합니다.
      parameters:
        - in: path
          name: userId
          required: true
          type: string
          description: 조회할 사용자의 userId
      produces:
        - application/json
      security:
        - Authorization: []
      responses:
        200:
          description: 유저 프로필 조회에 성공했습니다.
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: true
              code:
                type: integer
                example: 2000
              message:
                type: string
                example: "success!"
              result:
                type: object
                properties:
                  nickname:
                    type: string
                    example: "김정훈"
                    description: 유저의 닉네임
                  image:
                    type: string
                    example: "http://k.kakaocdn.net/dn/xxGa9/btsB5AD9Zx0/GezVLYpUOwIdOpSlU7dYo1/img_640x640.jpg"
                    description: 유저의 프로필 이미지 URL
                  postCount:
                    type: integer
                    example: 5
                    description: 유저가 작성한 게시글의 총 개수
                  firstPostImages:
                    type: array
                    items:
                      type: string
                    example:
                      [
                        "https://example.com/photo1.jpg",
                        "https://example.com/photo2.jpg",
                        "https://example.com/photo3.jpg",
                        "https://example.com/photo4.jpg",
                        "https://example.com/photo5.jpg",
                      ]
                    description: 유저가 작성한 게시글 중 첫 번째 이미지의 URL 목록
                  postIdx:
                    type: array
                    items:
                      type: integer
                    example: [55, 42, 41, 35, 26]
                    description: 유저가 작성한 게시글의 고유 번호 목록
        400:
          description: 잘못된 요청입니다. 입력값을 확인해주세요.
        401:
          description: 인증 실패. 유효한 토큰을 제공해야 합니다.
        404:
          description: 사용자를 찾을 수 없습니다.
        500:
          description: 서버 에러가 발생했습니다.

  /home/user/profile:
    patch:
      tags:
        - Home
      summary: 유저 프로필 정보 수정
      description: 유저의 닉네임과 프로필 사진을 업데이트합니다. 닉네임 또는 프로필 사진 중 하나만 업데이트할 수도 있습니다.
      produces:
        - application/json
      security:
        - Authorization: []
      parameters:
        - in: formData
          name: nickname
          type: string
          required: false
          description: 업데이트할 유저의 닉네임입니다.
        - in: formData
          name: image
          type: file
          required: false
          description: 업데이트할 유저의 프로필 사진입니다. 'profile' 폴더에 저장됩니다.
      responses:
        200:
          description: 유저 프로필 정보가 성공적으로 업데이트되었습니다.
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: true
              code:
                type: integer
                example: 2000
              message:
                type: string
                example: "유저 프로필 정보가 성공적으로 업데이트되었습니다."
        400:
          description: 잘못된 요청입니다. 입력값을 확인해주세요.
        401:
          description: 인증 실패. 유효한 토큰을 제공해야 합니다.
        404:
          description: 유저를 찾을 수 없습니다.
        500:
          description: 서버 에러가 발생했습니다.

  /home/family/{userId}:
    put:
      tags:
        - Home
      summary: 가족 승인 요청 처리
      description: 특정 사용자의 가족 승인 요청을 처리합니다.
      produces:
        - application/json
      security:
        - Authorization: []
      parameters:
        - in: path
          name: userId
          required: true
          type: string
          description: 승인할 사용자의 snsId
      responses:
        200:
          description: 가족 승인이 성공적으로 완료되었습니다.
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: true
              code:
                type: integer
                example: 2000
              message:
                type: string
                example: "가족 승인이 완료되었습니다."
        400:
          description: |
            잘못된 요청입니다. 다음과 같은 오류가 발생할 수 있습니다:
            - 가족 코드가 다릅니다.
            - 승인할 사용자가 이미 승인되었거나 존재하지 않습니다.
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: false
              code:
                type: integer
                example: 승인할 사용자가 이미 승인되었거나 존재하지 않습니다.
              message:
                type: string
                example: 승인할 사용자가 이미 승인되었거나 존재하지 않습니다.
        401:
          description: 인증 실패. 유효한 토큰을 제공해야 합니다.
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: false
              code:
                type: integer
                example: 401
              message:
                type: string
                example: "인증 실패. 유효한 토큰을 제공해야 합니다."
        500:
          description: 서버 에러가 발생했습니다.
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: false
              code:
                type: integer
                example: 500
              message:
                type: string
                example: "서버 에러가 발생했습니다."
